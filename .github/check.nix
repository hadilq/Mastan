let
  pkgs = import
    (
      fetchTarball https://github.com/nixos/nixpkgs/tarball/1809b328770806f94d306799147cc1a847d5328f
    )
    {
      config.android_sdk.accept_license = true;
      config.allowUnfree = true;
    };

  android = {
    versions = {
      platformTools = "34.0.5";
      buildTools = [
        "33.0.1"
        "34.0.0"
      ];
      cmdLine = "9.0";
    };

    platforms = [ "33" "34" ];
  };

  sdkArgs = {
    platformToolsVersion = android.versions.platformTools;
    buildToolsVersions = android.versions.buildTools;
    platformVersions = android.platforms;
    cmdLineToolsVersion = android.versions.cmdLine;
    extraLicenses = [
      "android-sdk-preview-license"
      "android-googletv-license"
      "android-sdk-arm-dbt-license"
      "google-gdk-license"
      "intel-android-extra-license"
      "intel-android-sysimage-license"
      "mips-android-sysimage-license"
    ];
  };

  androidComposition = pkgs.androidenv.composeAndroidPackages sdkArgs;
  androidSdk = androidComposition.androidsdk;
  androidSdkHome = "${androidSdk}/libexec/android-sdk";

  jdk = pkgs.jdk17;
in
with pkgs;
pkgs.mkShell {
  name = "mastan-check";

  packages = [
    androidSdk
    gradle
    jdk
  ];

  JAVA_HOME = "${jdk}";
  ANDROID_HOME = "${androidSdkHome}";

  # Ensures that we don't have to use a FHS env by using the nix store's aapt2.
  GRADLE_OPTS = "-Dorg.gradle.project.android.aapt2FromMavenOverride=${androidSdkHome}/build-tools/${lib.last android.versions.buildTools}/aapt2";

  shellHook = ''
    # Write out local.properties for Android Studio.
    cat <<EOF > local.properties
      # This file was automatically generated by nix-shell.
      sdk.dir=$ANDROID_HOME
    EOF
    ./gradlew clean check
    exit 0;
  '';
}
