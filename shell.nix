let
  dependencies = import ./nix/dependencies.nix {
    localDevelopment = true;
  };
in
with dependencies;
with pkgs;
mkShell {
  name = "maston-development";

  packages = [
    androidEmulator
    platformTools
    androidSdk
    git
    which
    libunwind
    android-studio
    gradle
    glslang
    vulkan-headers
    vulkan-loader
    vulkan-validation-layers
    vulkan-tools
  ];

  JAVA_HOME = "${devJdk}";
  ANDROID_HOME = "${androidSdkHome}";
  ANDROID_NDK_ROOT = "${androidSdkHome}/ndk-bundle";

  # Ensures that we don't have to use a FHS env by using the nix store's aapt2.
  GRADLE_OPTS = "-Dorg.gradle.project.android.aapt2FromMavenOverride=${androidSdkHome}/build-tools/${lib.last android.versions.buildTools}/aapt2";

  HOME = "${userHome}";
  USER_HOME = "${userHome}";
  GRADLE_USER_HOME = "${userHome}/.gradle";
  IDEA_VM_OPTIONS = "${userHome}/.idea-bin/idea64.vmoptions";
  IDEA_PROPERTIES = "${userHome}/.idea-bin/idea.properties";
  ANDROID_USER_HOME = "${androidUserHome}";
  ANDROID_AVD_HOME = "${androidAvdHome}";

  shellHook = ''
    mkdir -p ${androidAvdHome}
    # Add cmake to the path.
    export PATH="$cmake_root/bin:${devJdk}/bin:$PATH"

    # Write out local.properties for Android Studio.
    cat <<EOF > local.properties
      # This file was automatically generated by nix-shell.
      sdk.dir=$ANDROID_HOME
      ndk.dir=$ANDROID_NDK_ROOT
      cmake.dir=$cmake_root
    EOF
  '';
}
